{"version":3,"sources":["Components/movies/searchBar/SearchBar.js","Components/movies/moviesList/MoviesList.js","Components/movies/Movies.js","pages/MoviesPage.js","action/API.js","Components/movies/searchBar/SearchBar.module.css"],"names":["SearchBar","handleSubmit","useState","search","setSearch","className","s","searchForm","onSubmit","e","preventDefault","trim","toast","warn","type","searchFormButton","searchFormButtonLabel","searchFormInput","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","MoviesList","movies","location","useLocation","url","useRouteMatch","map","movie","to","pathname","id","state","from","title","Movies","history","useHistory","setMovies","useEffect","queryParsed","queryString","parse","query","API","fetchMoviesByQuery","then","data","results","length","catch","error","console","log","push","MoviesPage","API_KEY","BASE_URL","fetchData","a","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fethMovieById","fetchCast","fetchReviews","module","exports"],"mappings":"4MAsCeA,EAlCG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAcA,OACE,uBAAMC,UAAWC,IAAEC,WAAYC,SAZhB,SAACC,GAChBA,EAAEC,iBACoB,KAAlBP,EAAOQ,QAITV,EAAaE,GACbC,EAAU,KAJVQ,IAAMC,KAAK,wBASb,UACE,wBAAQC,KAAK,SAAST,UAAWC,IAAES,iBAAnC,SACE,sBAAMV,UAAWC,IAAEU,sBAAnB,sBAGF,uBACEX,UAAWC,IAAEW,gBACbH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAxBe,SAACZ,GAAD,OAAOL,EAAUK,EAAEa,cAAcC,MAAMC,gBAyBtDD,MAAOpB,Q,cChBAsB,EAdI,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACbC,EAAWC,cACTC,EAAQC,cAARD,IACR,OACE,6BACKH,EAAOK,KAAI,SAAAC,GAAK,OACf,6BACG,cAAC,IAAD,CAAMC,GAAI,CAACC,SAAS,GAAD,OAAKL,EAAL,YAAYG,EAAMG,IAAMC,MAAO,CAACC,KAAMV,IAAzD,SAAsEK,EAAMM,SADtEN,EAAMG,U,iBCqCVI,EArCA,WACb,IAAMC,EAAUC,cAChB,EAA4BvC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,MAArC,mBAAOwB,EAAP,KAAegB,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAcC,IAAYC,MAAMN,EAAQb,SAASxB,QACxC,OAAXA,GAAmByC,GAAeA,EAAYG,OAChD3C,EAAUwC,EAAYG,OAET,OAAX5C,GAIJ6C,IAAIC,mBAAmB9C,GAAQ+C,MAAK,SAACC,GAC/BhD,GAAkC,IAAxBgD,EAAKC,QAAQC,OACzBzC,IAAMC,KAAK,6BAGb6B,EAAUS,EAAKC,YACdE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAE7B,CAACf,EAAQb,SAASxB,OAAQA,IAO7B,OACE,qCACE,cAAC,EAAD,CAAWF,aAPM,SAAC8C,GACpB3C,EAAU2C,GACVP,EAAQkB,KAAR,UAAgBlB,EAAQb,SAASO,SAAjC,kBAAmDa,OAMhDrB,GAAU,cAAC,EAAD,CAAYA,OAAQA,QC9BtBiC,UARI,WACjB,OACE,mCACA,cAAC,EAAD,Q,6DCJEC,EAAU,mCACVC,EAAW,+B,SAEFC,I,2EAAf,4CAAAC,EAAA,6DAAyBlC,EAAzB,+BAA+B,GAAImC,EAAnC,+BAA4C,GAA5C,SACyBC,MAAMpC,EAAKmC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGUD,EAASE,OAHnB,gDAIIC,QAAQC,OAAO,IAAIC,MAAM,cAJ7B,oF,sBAOA,IAAMvB,EAAM,CACVwB,oBADU,WAER,OAAOV,EAAU,GAAD,OAAID,EAAJ,uCAA2CD,KAG7DX,mBALU,SAKS9C,GACjB,OAAO2D,EAAU,GAAD,OAAID,EAAJ,iCAAqCD,EAArC,iCAAqEzD,KAGvFsE,cATU,SASItC,GACZ,OAAO2B,EAAU,GAAD,OAAID,EAAJ,kBAAsB1B,EAAtB,oBAAoCyB,EAApC,qBAGlBc,UAbU,SAaAvC,GACR,OAAO2B,EAAU,GAAD,OAAID,EAAJ,kBAAsB1B,EAAtB,4BAA4CyB,EAA5C,qBAGlBe,aAjBU,SAiBGxC,GACX,OAAO2B,EAAU,GAAD,OAAID,EAAJ,kBAAsB1B,EAAtB,4BAA4CyB,EAA5C,sBAILZ,O,mBChCf4B,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB","file":"static/js/7.f8fa4b02.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport s from \"./SearchBar.module.css\";\n\nconst SearchBar = ({ handleSubmit }) => {\n  const [search, setSearch] = useState(\"\");\n\n  const handleChange = (e) => setSearch(e.currentTarget.value.toLowerCase());\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (search.trim() === \"\") {\n      toast.warn(\"Enter a search word\");\n      return;\n    } else {\n      handleSubmit(search);\n      setSearch(\"\");\n    }\n  };\n \n  return (\n    <form className={s.searchForm} onSubmit={onSubmit}>\n      <button type=\"submit\" className={s.searchFormButton}>\n        <span className={s.searchFormButtonLabel}>Search</span>\n      </button>\n\n      <input\n        className={s.searchFormInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={handleChange}\n        value={search}\n      />\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import { Link, useLocation, useRouteMatch } from \"react-router-dom\";\n\nconst MoviesList = ({movies}) => {\n  const location = useLocation();\n  const { url } = useRouteMatch();\n  return (\n    <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n             <Link to={{pathname: `${url}/${movie.id}`, state: {from: location}}}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n  );\n}\n\nexport default MoviesList;","import { useState, useEffect } from \"react\";\nimport API from \"../../action/API\";\nimport SearchBar from \"./searchBar/SearchBar\";\nimport { toast } from \"react-toastify\";\nimport MoviesList from \"./moviesList/MoviesList\";\nimport { useHistory } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nconst Movies = () => {\n  const history = useHistory();\n  const [search, setSearch] = useState(null);\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    const queryParsed = queryString.parse(history.location.search);\n    if (search === null && queryParsed && queryParsed.query) {\n      setSearch(queryParsed.query);\n    }\n    if (search === null) {\n      return;\n    }\n\n    API.fetchMoviesByQuery(search).then((data) => {\n      if (search && data.results.length === 0) {\n        toast.warn(\"No results for your query\");\n        return;\n      }\n      setMovies(data.results);\n    }).catch(error => console.log(error));\n    \n  }, [history.location.search, search]);\n\n  const handleSubmit = (query) => {\n    setSearch(query);\n    history.push(`${history.location.pathname}?query=${query}`);\n  };\n\n  return (\n    <>\n      <SearchBar handleSubmit={handleSubmit} />\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import Movies from \"../Components/movies/Movies\"\n\nconst MoviesPage = () => {\n  return (\n    <>\n    <Movies/>\n    </>\n  );\n}\n\nexport default MoviesPage;","\nconst API_KEY = \"0ab8998f8a4935c66d8f184668d89e03\";\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchData(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n  ? await response.json()\n  : Promise.reject(new Error('Not found'));\n}\n\nconst API = {\n  fetchTrendingMovies() {\n    return fetchData(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n  },\n\n  fetchMoviesByQuery(search) {\n    return fetchData(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${search}`)\n  },\n\n  fethMovieById(id){\n    return fetchData(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`)\n  },\n\n  fetchCast(id){\n    return fetchData(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n  },\n\n  fetchReviews(id){\n    return fetchData(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n  }\n};\n\nexport default API;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"SearchBar_searchbar__2snjg\",\"searchForm\":\"SearchBar_searchForm__1lgaH\",\"searchFormButton\":\"SearchBar_searchFormButton__eAZ4_\",\"searchFormButtonLabel\":\"SearchBar_searchFormButtonLabel__nrZq8\",\"searchFormInput\":\"SearchBar_searchFormInput__3H3QE\"};"],"sourceRoot":""}